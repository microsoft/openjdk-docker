name: "$(Year:yyyy).$(Month).$(BuildID)"

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    exclude:
      - .devops
      - .github/workflows
pr: none

parameters:
  - name: jobs
    type: object
    default:
      cbld_11:
        distro: cbld
        version: 11
        package: msopenjdk-11
      ubuntu_11:
        distro: ubuntu
        version: 11
        package: msopenjdk-11
      mariner_11:
        distro: mariner
        version: 11
        package: msopenjdk-11
      cbld_17:
        distro: cbld
        version: 17
        package: msopenjdk-17
      ubuntu_17:
        distro: ubuntu
        version: 17
        package: msopenjdk-17
      mariner_17:
        distro: mariner
        version: 17
        package: msopenjdk-17

jobs:
  - job: build_internal
    displayName: "build internal "
    pool:
      vmImage: ubuntu-20.04
    strategy:
      matrix: ${{ parameters.jobs }}
    steps:
      - task: Docker@2
        displayName: build image
        inputs:
          command: build
          repository: internal/private/openjdk/jdk
          dockerfile: docker/$(distro)/Dockerfile.msopenjdk-$(version)-jdk
          containerRegistry: "msopenjdk ACR"
          arguments: --build-arg package=$(package)
          tags: |
            $(version)-$(distro)
      - task: Docker@2
        displayName: push image to container registry
        inputs:
          command: push
          repository: internal/private/openjdk/jdk
          containerRegistry: "msopenjdk ACR"
          tags: |
            $(version)-$(distro)

  - job: wait_for_validation
    dependsOn: build_internal
    displayName: wait for validation
    pool: server
    steps:
      - task: ManualValidation@0
        # 3 days
        timeoutInMinutes: 4320
        inputs:
          instructions: "please validate the build configuration, artifacts, tests, and resume"
          onTimeout: "resume"

  - job: build_public
    displayName: "build public "
    dependsOn: wait_for_validation
    pool:
      vmImage: ubuntu-20.04
    strategy:
      matrix: ${{ parameters.jobs }}
    steps:
      - task: Docker@2
        displayName: build image
        inputs:
          command: build
          repository: public/openjdk/jdk
          dockerfile: docker/$(distro)/Dockerfile.msopenjdk-$(version)-jdk
          containerRegistry: "msopenjdk ACR"
          arguments: --build-arg package=$(package)
          tags: |
            $(version)-$(distro)
      - task: Docker@2
        displayName: push image to container registry
        inputs:
          command: push
          repository: public/openjdk/jdk
          containerRegistry: "msopenjdk ACR"
          tags: |
            $(version)-$(distro)
