# This is a basic workflow to help you get started with Actions

name: Build Docker Images CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build_temurin:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        baseimage: ["mariner", "distroless"]

    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Build the image
        run: |
          docker build \
            -t mcr.microsoft.com/openjdk/jdk:8-${{ matrix.baseimage }} \
            -f ./docker/${{ matrix.baseimage }}/Dockerfile.temurin-8-jdk \
            ./docker/${{ matrix.baseimage }}/
      - name: Test the image
        run: |
          bash ./scripts/validate-image.sh -s ${{ matrix.baseimage }} temurin 8

  build_msopenjdk:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jdkversion: [11, 17, 21] # Only build LTS releases
        baseimage: ["mariner", "ubuntu", "distroless"]

    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Build the image
        run: |
          docker build \
            -t mcr.microsoft.com/openjdk/jdk:${{ matrix.jdkversion }}-${{ matrix.baseimage }} \
            -f ./docker/${{ matrix.baseimage }}/Dockerfile.msopenjdk-${{ matrix.jdkversion }}-jdk \
            ./docker/${{ matrix.baseimage }}/
      - name: Test the image
        run: |
          bash ./scripts/validate-image.sh -s ${{ matrix.baseimage }} msopenjdk ${{ matrix.jdkversion }}
