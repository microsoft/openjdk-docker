ARG LINUX_VERSION="3.0"
ARG INSTALLER_IMAGE="mcr.microsoft.com/azurelinux/base/core"
ARG INSTALLER_TAG="${LINUX_VERSION}"
ARG BASE_IMAGE="mcr.microsoft.com/azurelinux/distroless/base"
ARG BASE_TAG="${LINUX_VERSION}"

FROM ${INSTALLER_IMAGE}:${INSTALLER_TAG} AS installer

# Redeclare ARG to make it available in this build stage
ARG INSTALLER_TAG
ARG JDK_URL="https://aka.ms/download-jdk/microsoft-jdk-21-linux-ARCH.tar.gz"
ENV INSTALLER_TAG="${INSTALLER_TAG}"

# Add dynamically linked packages: zlib
# Distroless base image already has tzdata ca-certificates openssl glibc
# Create a non-root user and group (just like .NET's image)
RUN mkdir /staging \
    && tdnf update -y \
    && tdnf install -y --releasever=${INSTALLER_TAG} --installroot /staging zlib \
    && tdnf install -y gawk shadow-utils ca-certificates tar \
    && groupadd --gid=101 app \
    && useradd -l --uid=101 --gid=101 --shell /bin/false --create-home app  \
    && install -d -m 0755 -o 101 -g 101 "/staging/home/app" \
    && cat /etc/passwd | grep '^\(root\|app\):' > "/staging/etc/passwd" \
    && cat /etc/group | grep '^\(root\|app\):' > "/staging/etc/group"

# Get JDK
RUN mkdir -p /usr/lib/jvm && \
    if [ $(uname -m) = "x86_64" ]; then \
        JDK_URL=${JDK_URL/ARCH/x64}; \
    else \
        JDK_URL=${JDK_URL/ARCH/aarch64}; \
    fi && \
    curl --silent -L ${JDK_URL} -o /jdk.tar.gz && \
    tar -xzf /jdk.tar.gz -C / && \
    rm /jdk.tar.gz && \
    mv /jdk-2* /usr/jdk

# Clean up staging
RUN rm -rf /staging/etc/tdnf \
    && rm -rf /staging/run/* \
    && rm -rf /staging/var/cache/tdnf \
    && rm -rf /staging/var/lib/rpm \
    && rm -rf /staging/usr/share/doc \
    && rm -rf /staging/usr/share/man \
    && rm -rf /usr/jdk/man /usr/jdk/lib/src.zip \
    && find /staging/var/log -type f -size +0 -delete

FROM ${BASE_IMAGE}:${BASE_TAG}

LABEL "Author"="Microsoft"
LABEL "Support"="Microsoft OpenJDK Support <openjdk-support@microsoft.com>"

COPY --from=installer /staging/ /
COPY --from=installer /usr/jdk/ /usr/jdk/
COPY --from=installer --chown=101:101 /staging/home/app /home/app

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
ENV JAVA_HOME=/usr/jdk
ENV PATH="$PATH:$JAVA_HOME/bin"

ENTRYPOINT [ "/usr/jdk/bin/java" ]
CMD [ "-version" ]
