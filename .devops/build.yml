# build.yml Build pipeline to build Microsoft's build of OpenJDK docker images. When running the pipeline
# replace "image-repository" value with the location of your docker images (e.g. hub.docker.io/...)
# replace the image tags as needed.

name: "$(Year:yyyy).$(Month).$(BuildID)"

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    exclude:
      - .devops
      - .github/workflows
pr: none

parameters:
  - name: organization
    type: string
  - name: feed
    type: string
  - name: package
    type: string
  - name: jobs
    type: object
    default:
      mariner_8:
        new_LTS_image: false
        distro: mariner
        version: 8
        package: temurin-8
        image: "image-repository"
        tag: "2.0"
      distroless_8:
        new_LTS_image: false
        distro: distroless
        version: 8
        package: temurin-8
        installer_image: "image-repository"
        installer_tag: "2.0"
        base_image: "image-repository"
        base_tag: "2.0"
      ubuntu_11:
        new_LTS_image: false
        distro: ubuntu
        version: 11
        package: msopenjdk-11
        image: "image-repository"
        tag: "image-tag"
      mariner_11:
        new_LTS_image: false
        distro: mariner
        version: 11
        package: msopenjdk-11
        image: "image-repository"
        tag: "2.0"
      distroless_11:
        new_LTS_image: false
        distro: distroless
        version: 11
        package: msopenjdk-11
        installer_image: "image-repository"
        installer_tag: "2.0"
        base_image: "image-repository"
        base_tag: "2.0"
      ubuntu_17:
        new_LTS_image: false
        distro: ubuntu
        version: 17
        package: msopenjdk-17
        image: "image-repository"
        tag: "image-tag"
      mariner_17:
        new_LTS_image: false
        distro: mariner
        version: 17
        package: msopenjdk-17
        image: "image-repository"
        tag: "2.0"
      distroless_17:
        new_LTS_image: false
        distro: distroless
        version: 17
        package: msopenjdk-17
        installer_image: "image-repository"
        installer_tag: "2.0"
        base_image: "image-repository"
        base_tag: "2.0"
      ubuntu_21:
        new_LTS_image: false
        distro: ubuntu
        version: 21
        package: msopenjdk-21
        image: "image-repository"
        tag: "image-tag"
      mariner_21:
        new_LTS_image: false
        distro: mariner
        version: 21
        package: msopenjdk-21
        image: "image-repository"
        tag: "2.0"
      distroless_21:
        new_LTS_image: false
        distro: distroless
        version: 21
        package: msopenjdk-21
        installer_image: "image-repository"
        installer_tag: "2.0"
        base_image: "image-repository"
        base_tag: "2.0"

resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      sourceAnalysisPool:
        name: JEG-windows2022-x64-github
        os: windows
    stages:
      - stage: build_internal
        displayName: "Build Internal"
        jobs:
          - job: build_internal
            displayName: "build internal"
            pool:
              name: JEG-mariner2.0-x64-release
              os: linux
            strategy:
              matrix: ${{ parameters.jobs }}
            steps:
              - task: AzureCLI@2
                displayName: "Download ORAS"
                condition: ne( variables['new_LTS_image'], true)
                inputs:
                  azureSubscription: "JEG-Infrastructure"
                  scriptType: "bash"
                  scriptLocation: "scriptPath"
                  scriptPath: $(Build.SourcesDirectory)/scripts/install-oras.sh
                env:
                  AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
                  ORAS_VERSION: 1.1.0
                  ORGANIZATION: ${{ parameters.organization }}
                  FEED: ${{ parameters.feed }}
                  NAME: ${{ parameters.package }}

              - task: AzureCLI@2
                displayName: Annotate previous image
                condition: ne( variables['new_LTS_image'], true)
                inputs:
                  azureSubscription: "JEG-Infrastructure"
                  scriptType: "bash"
                  scriptLocation: "scriptPath"
                  scriptPath: $(Build.SourcesDirectory)/scripts/image-annotation.sh
                env:
                  ACR_NAME: msopenjdk
                  REGISTRY: msopenjdk.azurecr.io/internal/private/openjdk/jdk:$(version)-$(distro)
                  USER_NAME: "00000000-0000-0000-0000-000000000000"

              - task: AzureCLI@2
                inputs:
                  azureSubscription: "JEG-Infrastructure"
                  scriptType: "bash"
                  scriptLocation: "scriptPath"
                  scriptPath: $(Build.SourcesDirectory)/scripts/build-image.sh
                displayName: build image
                env:
                  REGISTRY_TAG: msopenjdk.azurecr.io/internal/private/openjdk/jdk:$(version)-$(distro)
                  IMAGE: $(image)
                  TAG: $(tag)
                  PACKAGE: $(package)
                  DISTRIBUTION: $(distro)
                  INSTALLER_IMAGE: $(installer_image)
                  INSTALLER_TAG: $(installer_tag)

      - stage: validate_and_publish
        displayName: "Validate & Publish"
        dependsOn: build_internal
        jobs:
          - job: wait_for_validation
            displayName: wait for validation
            pool: server
            steps:
              - task: ManualValidation@0
                # 3 days
                timeoutInMinutes: 4320
                inputs:
                  instructions: "please validate the build configuration, artifacts, tests, and resume"
                  onTimeout: "resume"

          - job: build_public
            displayName: "build public "
            dependsOn: wait_for_validation
            pool:
              name: JEG-mariner2.0-x64-release
              os: linux
            strategy:
              matrix: ${{ parameters.jobs }}
            steps:

              - task: AzureCLI@2
                displayName: "Download ORAS"
                condition: ne( variables['new_LTS_image'], true)
                inputs:
                  azureSubscription: "JEG-Infrastructure"
                  scriptType: "bash"
                  scriptLocation: "scriptPath"
                  scriptPath: $(Build.SourcesDirectory)/scripts/install-oras.sh
                env:
                  AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
                  ORAS_VERSION: 1.1.0
                  ORGANIZATION: ${{ parameters.organization }}
                  FEED: ${{ parameters.feed }}
                  NAME: ${{ parameters.package }}

              - task: AzureCLI@2
                displayName: Annotate previous image
                condition: ne( variables['new_LTS_image'], true)
                inputs:
                  azureSubscription: "JEG-Infrastructure"
                  scriptType: "bash"
                  scriptLocation: "scriptPath"
                  scriptPath: $(Build.SourcesDirectory)/scripts/image-annotation.sh
                env:
                  ACR_NAME: msopenjdk
                  REGISTRY: msopenjdk.azurecr.io/public/openjdk/jdk:$(version)-$(distro)
                  USER_NAME: "00000000-0000-0000-0000-000000000000"

              - task: AzureCLI@2
                inputs:
                  azureSubscription: "JEG-Infrastructure"
                  scriptType: "bash"
                  scriptLocation: "scriptPath"
                  scriptPath: scripts/build-image.sh
                displayName: build image
                env:
                  REGISTRY_TAG: msopenjdk.azurecr.io/public/openjdk/jdk:$(version)-$(distro)
                  IMAGE: $(image)
                  TAG: $(tag)
                  PACKAGE: $(package)
                  DISTRIBUTION: $(distro)
                  INSTALLER_IMAGE: $(installer_image)
                  INSTALLER_TAG: $(installer_tag)

              - task: AzureCLI@2
                displayName: Image signing
                inputs:
                  azureSubscription: "JEG-Infrastructure"
                  scriptType: "bash"
                  scriptLocation: "inlineScript"
                  inlineScript: |
                    az pipelines run \
                      --branch main \
                      --org ${{ parameters.organization }} \
                      --project $(OPENJDK_PROJECT) \
                      --id $(OPENJDK_SIGNING_ID)
